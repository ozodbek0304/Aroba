/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainImport } from './routes/_main'
import { Route as AuthImport } from './routes/_auth'
import { Route as MainManagerImport } from './routes/_main/_manager'
import { Route as MainNotFoundImport } from './routes/_main/$not-found'

// Create Virtual Routes

const MainIndexLazyImport = createFileRoute('/_main/')()
const MainProfileLazyImport = createFileRoute('/_main/profile')()
const AuthAuthLazyImport = createFileRoute('/_auth/auth')()
const MainManagerReportLazyImport = createFileRoute('/_main/_manager/report')()
const MainManagerOrdererLazyImport = createFileRoute(
  '/_main/_manager/orderer',
)()
const MainManagerCheckoutLazyImport = createFileRoute(
  '/_main/_manager/checkout',
)()
const MainDispatcherOrdersLazyImport = createFileRoute(
  '/_main/_dispatcher/orders',
)()
const MainDispatcherOrderStatusLazyImport = createFileRoute(
  '/_main/_dispatcher/order-status',
)()
const MainDispatcherFillOrderLazyImport = createFileRoute(
  '/_main/_dispatcher/fill-order',
)()
const MainContactsContactsLazyImport = createFileRoute(
  '/_main/_contacts/contacts',
)()
const MainAdminRolesLazyImport = createFileRoute('/_main/_admin/roles')()
const MainAdminControlUsersLazyImport = createFileRoute(
  '/_main/_admin/control-users',
)()
const MainAccountingReyestrLazyImport = createFileRoute(
  '/_main/_accounting/reyestr',
)()
const MainAccountingFakturaLazyImport = createFileRoute(
  '/_main/_accounting/faktura',
)()
const MainAccountingContractLazyImport = createFileRoute(
  '/_main/_accounting/contract',
)()

// Create/Update Routes

const MainRoute = MainImport.update({
  id: '/_main',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const MainIndexLazyRoute = MainIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainRoute,
} as any).lazy(() => import('./routes/_main/index.lazy').then((d) => d.Route))

const MainProfileLazyRoute = MainProfileLazyImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => MainRoute,
} as any).lazy(() => import('./routes/_main/profile.lazy').then((d) => d.Route))

const AuthAuthLazyRoute = AuthAuthLazyImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/auth.lazy').then((d) => d.Route))

const MainManagerRoute = MainManagerImport.update({
  id: '/_manager',
  getParentRoute: () => MainRoute,
} as any)

const MainNotFoundRoute = MainNotFoundImport.update({
  id: '/$not-found',
  path: '/$not-found',
  getParentRoute: () => MainRoute,
} as any)

const MainManagerReportLazyRoute = MainManagerReportLazyImport.update({
  id: '/report',
  path: '/report',
  getParentRoute: () => MainManagerRoute,
} as any).lazy(() =>
  import('./routes/_main/_manager/report.lazy').then((d) => d.Route),
)

const MainManagerOrdererLazyRoute = MainManagerOrdererLazyImport.update({
  id: '/orderer',
  path: '/orderer',
  getParentRoute: () => MainManagerRoute,
} as any).lazy(() =>
  import('./routes/_main/_manager/orderer.lazy').then((d) => d.Route),
)

const MainManagerCheckoutLazyRoute = MainManagerCheckoutLazyImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => MainManagerRoute,
} as any).lazy(() =>
  import('./routes/_main/_manager/checkout.lazy').then((d) => d.Route),
)

const MainDispatcherOrdersLazyRoute = MainDispatcherOrdersLazyImport.update({
  id: '/_dispatcher/orders',
  path: '/orders',
  getParentRoute: () => MainRoute,
} as any).lazy(() =>
  import('./routes/_main/_dispatcher/orders.lazy').then((d) => d.Route),
)

const MainDispatcherOrderStatusLazyRoute =
  MainDispatcherOrderStatusLazyImport.update({
    id: '/_dispatcher/order-status',
    path: '/order-status',
    getParentRoute: () => MainRoute,
  } as any).lazy(() =>
    import('./routes/_main/_dispatcher/order-status.lazy').then((d) => d.Route),
  )

const MainDispatcherFillOrderLazyRoute =
  MainDispatcherFillOrderLazyImport.update({
    id: '/_dispatcher/fill-order',
    path: '/fill-order',
    getParentRoute: () => MainRoute,
  } as any).lazy(() =>
    import('./routes/_main/_dispatcher/fill-order.lazy').then((d) => d.Route),
  )

const MainContactsContactsLazyRoute = MainContactsContactsLazyImport.update({
  id: '/_contacts/contacts',
  path: '/contacts',
  getParentRoute: () => MainRoute,
} as any).lazy(() =>
  import('./routes/_main/_contacts/contacts.lazy').then((d) => d.Route),
)

const MainAdminRolesLazyRoute = MainAdminRolesLazyImport.update({
  id: '/_admin/roles',
  path: '/roles',
  getParentRoute: () => MainRoute,
} as any).lazy(() =>
  import('./routes/_main/_admin/roles.lazy').then((d) => d.Route),
)

const MainAdminControlUsersLazyRoute = MainAdminControlUsersLazyImport.update({
  id: '/_admin/control-users',
  path: '/control-users',
  getParentRoute: () => MainRoute,
} as any).lazy(() =>
  import('./routes/_main/_admin/control-users.lazy').then((d) => d.Route),
)

const MainAccountingReyestrLazyRoute = MainAccountingReyestrLazyImport.update({
  id: '/_accounting/reyestr',
  path: '/reyestr',
  getParentRoute: () => MainRoute,
} as any).lazy(() =>
  import('./routes/_main/_accounting/reyestr.lazy').then((d) => d.Route),
)

const MainAccountingFakturaLazyRoute = MainAccountingFakturaLazyImport.update({
  id: '/_accounting/faktura',
  path: '/faktura',
  getParentRoute: () => MainRoute,
} as any).lazy(() =>
  import('./routes/_main/_accounting/faktura.lazy').then((d) => d.Route),
)

const MainAccountingContractLazyRoute = MainAccountingContractLazyImport.update(
  {
    id: '/_accounting/contract',
    path: '/contract',
    getParentRoute: () => MainRoute,
  } as any,
).lazy(() =>
  import('./routes/_main/_accounting/contract.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/_main/$not-found': {
      id: '/_main/$not-found'
      path: '/$not-found'
      fullPath: '/$not-found'
      preLoaderRoute: typeof MainNotFoundImport
      parentRoute: typeof MainImport
    }
    '/_main/_manager': {
      id: '/_main/_manager'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainManagerImport
      parentRoute: typeof MainImport
    }
    '/_auth/auth': {
      id: '/_auth/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthLazyImport
      parentRoute: typeof AuthImport
    }
    '/_main/profile': {
      id: '/_main/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof MainProfileLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/': {
      id: '/_main/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainIndexLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/_accounting/contract': {
      id: '/_main/_accounting/contract'
      path: '/contract'
      fullPath: '/contract'
      preLoaderRoute: typeof MainAccountingContractLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/_accounting/faktura': {
      id: '/_main/_accounting/faktura'
      path: '/faktura'
      fullPath: '/faktura'
      preLoaderRoute: typeof MainAccountingFakturaLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/_accounting/reyestr': {
      id: '/_main/_accounting/reyestr'
      path: '/reyestr'
      fullPath: '/reyestr'
      preLoaderRoute: typeof MainAccountingReyestrLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/_admin/control-users': {
      id: '/_main/_admin/control-users'
      path: '/control-users'
      fullPath: '/control-users'
      preLoaderRoute: typeof MainAdminControlUsersLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/_admin/roles': {
      id: '/_main/_admin/roles'
      path: '/roles'
      fullPath: '/roles'
      preLoaderRoute: typeof MainAdminRolesLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/_contacts/contacts': {
      id: '/_main/_contacts/contacts'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof MainContactsContactsLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/_dispatcher/fill-order': {
      id: '/_main/_dispatcher/fill-order'
      path: '/fill-order'
      fullPath: '/fill-order'
      preLoaderRoute: typeof MainDispatcherFillOrderLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/_dispatcher/order-status': {
      id: '/_main/_dispatcher/order-status'
      path: '/order-status'
      fullPath: '/order-status'
      preLoaderRoute: typeof MainDispatcherOrderStatusLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/_dispatcher/orders': {
      id: '/_main/_dispatcher/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof MainDispatcherOrdersLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/_manager/checkout': {
      id: '/_main/_manager/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof MainManagerCheckoutLazyImport
      parentRoute: typeof MainManagerImport
    }
    '/_main/_manager/orderer': {
      id: '/_main/_manager/orderer'
      path: '/orderer'
      fullPath: '/orderer'
      preLoaderRoute: typeof MainManagerOrdererLazyImport
      parentRoute: typeof MainManagerImport
    }
    '/_main/_manager/report': {
      id: '/_main/_manager/report'
      path: '/report'
      fullPath: '/report'
      preLoaderRoute: typeof MainManagerReportLazyImport
      parentRoute: typeof MainManagerImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthAuthLazyRoute: typeof AuthAuthLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthLazyRoute: AuthAuthLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface MainManagerRouteChildren {
  MainManagerCheckoutLazyRoute: typeof MainManagerCheckoutLazyRoute
  MainManagerOrdererLazyRoute: typeof MainManagerOrdererLazyRoute
  MainManagerReportLazyRoute: typeof MainManagerReportLazyRoute
}

const MainManagerRouteChildren: MainManagerRouteChildren = {
  MainManagerCheckoutLazyRoute: MainManagerCheckoutLazyRoute,
  MainManagerOrdererLazyRoute: MainManagerOrdererLazyRoute,
  MainManagerReportLazyRoute: MainManagerReportLazyRoute,
}

const MainManagerRouteWithChildren = MainManagerRoute._addFileChildren(
  MainManagerRouteChildren,
)

interface MainRouteChildren {
  MainNotFoundRoute: typeof MainNotFoundRoute
  MainManagerRoute: typeof MainManagerRouteWithChildren
  MainProfileLazyRoute: typeof MainProfileLazyRoute
  MainIndexLazyRoute: typeof MainIndexLazyRoute
  MainAccountingContractLazyRoute: typeof MainAccountingContractLazyRoute
  MainAccountingFakturaLazyRoute: typeof MainAccountingFakturaLazyRoute
  MainAccountingReyestrLazyRoute: typeof MainAccountingReyestrLazyRoute
  MainAdminControlUsersLazyRoute: typeof MainAdminControlUsersLazyRoute
  MainAdminRolesLazyRoute: typeof MainAdminRolesLazyRoute
  MainContactsContactsLazyRoute: typeof MainContactsContactsLazyRoute
  MainDispatcherFillOrderLazyRoute: typeof MainDispatcherFillOrderLazyRoute
  MainDispatcherOrderStatusLazyRoute: typeof MainDispatcherOrderStatusLazyRoute
  MainDispatcherOrdersLazyRoute: typeof MainDispatcherOrdersLazyRoute
}

const MainRouteChildren: MainRouteChildren = {
  MainNotFoundRoute: MainNotFoundRoute,
  MainManagerRoute: MainManagerRouteWithChildren,
  MainProfileLazyRoute: MainProfileLazyRoute,
  MainIndexLazyRoute: MainIndexLazyRoute,
  MainAccountingContractLazyRoute: MainAccountingContractLazyRoute,
  MainAccountingFakturaLazyRoute: MainAccountingFakturaLazyRoute,
  MainAccountingReyestrLazyRoute: MainAccountingReyestrLazyRoute,
  MainAdminControlUsersLazyRoute: MainAdminControlUsersLazyRoute,
  MainAdminRolesLazyRoute: MainAdminRolesLazyRoute,
  MainContactsContactsLazyRoute: MainContactsContactsLazyRoute,
  MainDispatcherFillOrderLazyRoute: MainDispatcherFillOrderLazyRoute,
  MainDispatcherOrderStatusLazyRoute: MainDispatcherOrderStatusLazyRoute,
  MainDispatcherOrdersLazyRoute: MainDispatcherOrdersLazyRoute,
}

const MainRouteWithChildren = MainRoute._addFileChildren(MainRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof MainManagerRouteWithChildren
  '/$not-found': typeof MainNotFoundRoute
  '/auth': typeof AuthAuthLazyRoute
  '/profile': typeof MainProfileLazyRoute
  '/': typeof MainIndexLazyRoute
  '/contract': typeof MainAccountingContractLazyRoute
  '/faktura': typeof MainAccountingFakturaLazyRoute
  '/reyestr': typeof MainAccountingReyestrLazyRoute
  '/control-users': typeof MainAdminControlUsersLazyRoute
  '/roles': typeof MainAdminRolesLazyRoute
  '/contacts': typeof MainContactsContactsLazyRoute
  '/fill-order': typeof MainDispatcherFillOrderLazyRoute
  '/order-status': typeof MainDispatcherOrderStatusLazyRoute
  '/orders': typeof MainDispatcherOrdersLazyRoute
  '/checkout': typeof MainManagerCheckoutLazyRoute
  '/orderer': typeof MainManagerOrdererLazyRoute
  '/report': typeof MainManagerReportLazyRoute
}

export interface FileRoutesByTo {
  '': typeof MainManagerRouteWithChildren
  '/$not-found': typeof MainNotFoundRoute
  '/auth': typeof AuthAuthLazyRoute
  '/profile': typeof MainProfileLazyRoute
  '/': typeof MainIndexLazyRoute
  '/contract': typeof MainAccountingContractLazyRoute
  '/faktura': typeof MainAccountingFakturaLazyRoute
  '/reyestr': typeof MainAccountingReyestrLazyRoute
  '/control-users': typeof MainAdminControlUsersLazyRoute
  '/roles': typeof MainAdminRolesLazyRoute
  '/contacts': typeof MainContactsContactsLazyRoute
  '/fill-order': typeof MainDispatcherFillOrderLazyRoute
  '/order-status': typeof MainDispatcherOrderStatusLazyRoute
  '/orders': typeof MainDispatcherOrdersLazyRoute
  '/checkout': typeof MainManagerCheckoutLazyRoute
  '/orderer': typeof MainManagerOrdererLazyRoute
  '/report': typeof MainManagerReportLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_main': typeof MainRouteWithChildren
  '/_main/$not-found': typeof MainNotFoundRoute
  '/_main/_manager': typeof MainManagerRouteWithChildren
  '/_auth/auth': typeof AuthAuthLazyRoute
  '/_main/profile': typeof MainProfileLazyRoute
  '/_main/': typeof MainIndexLazyRoute
  '/_main/_accounting/contract': typeof MainAccountingContractLazyRoute
  '/_main/_accounting/faktura': typeof MainAccountingFakturaLazyRoute
  '/_main/_accounting/reyestr': typeof MainAccountingReyestrLazyRoute
  '/_main/_admin/control-users': typeof MainAdminControlUsersLazyRoute
  '/_main/_admin/roles': typeof MainAdminRolesLazyRoute
  '/_main/_contacts/contacts': typeof MainContactsContactsLazyRoute
  '/_main/_dispatcher/fill-order': typeof MainDispatcherFillOrderLazyRoute
  '/_main/_dispatcher/order-status': typeof MainDispatcherOrderStatusLazyRoute
  '/_main/_dispatcher/orders': typeof MainDispatcherOrdersLazyRoute
  '/_main/_manager/checkout': typeof MainManagerCheckoutLazyRoute
  '/_main/_manager/orderer': typeof MainManagerOrdererLazyRoute
  '/_main/_manager/report': typeof MainManagerReportLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/$not-found'
    | '/auth'
    | '/profile'
    | '/'
    | '/contract'
    | '/faktura'
    | '/reyestr'
    | '/control-users'
    | '/roles'
    | '/contacts'
    | '/fill-order'
    | '/order-status'
    | '/orders'
    | '/checkout'
    | '/orderer'
    | '/report'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/$not-found'
    | '/auth'
    | '/profile'
    | '/'
    | '/contract'
    | '/faktura'
    | '/reyestr'
    | '/control-users'
    | '/roles'
    | '/contacts'
    | '/fill-order'
    | '/order-status'
    | '/orders'
    | '/checkout'
    | '/orderer'
    | '/report'
  id:
    | '__root__'
    | '/_auth'
    | '/_main'
    | '/_main/$not-found'
    | '/_main/_manager'
    | '/_auth/auth'
    | '/_main/profile'
    | '/_main/'
    | '/_main/_accounting/contract'
    | '/_main/_accounting/faktura'
    | '/_main/_accounting/reyestr'
    | '/_main/_admin/control-users'
    | '/_main/_admin/roles'
    | '/_main/_contacts/contacts'
    | '/_main/_dispatcher/fill-order'
    | '/_main/_dispatcher/order-status'
    | '/_main/_dispatcher/orders'
    | '/_main/_manager/checkout'
    | '/_main/_manager/orderer'
    | '/_main/_manager/report'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  MainRoute: typeof MainRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  MainRoute: MainRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_main"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/auth"
      ]
    },
    "/_main": {
      "filePath": "_main.tsx",
      "children": [
        "/_main/$not-found",
        "/_main/_manager",
        "/_main/profile",
        "/_main/",
        "/_main/_accounting/contract",
        "/_main/_accounting/faktura",
        "/_main/_accounting/reyestr",
        "/_main/_admin/control-users",
        "/_main/_admin/roles",
        "/_main/_contacts/contacts",
        "/_main/_dispatcher/fill-order",
        "/_main/_dispatcher/order-status",
        "/_main/_dispatcher/orders"
      ]
    },
    "/_main/$not-found": {
      "filePath": "_main/$not-found.tsx",
      "parent": "/_main"
    },
    "/_main/_manager": {
      "filePath": "_main/_manager.tsx",
      "parent": "/_main",
      "children": [
        "/_main/_manager/checkout",
        "/_main/_manager/orderer",
        "/_main/_manager/report"
      ]
    },
    "/_auth/auth": {
      "filePath": "_auth/auth.lazy.tsx",
      "parent": "/_auth"
    },
    "/_main/profile": {
      "filePath": "_main/profile.lazy.tsx",
      "parent": "/_main"
    },
    "/_main/": {
      "filePath": "_main/index.lazy.tsx",
      "parent": "/_main"
    },
    "/_main/_accounting/contract": {
      "filePath": "_main/_accounting/contract.lazy.tsx",
      "parent": "/_main"
    },
    "/_main/_accounting/faktura": {
      "filePath": "_main/_accounting/faktura.lazy.tsx",
      "parent": "/_main"
    },
    "/_main/_accounting/reyestr": {
      "filePath": "_main/_accounting/reyestr.lazy.tsx",
      "parent": "/_main"
    },
    "/_main/_admin/control-users": {
      "filePath": "_main/_admin/control-users.lazy.tsx",
      "parent": "/_main"
    },
    "/_main/_admin/roles": {
      "filePath": "_main/_admin/roles.lazy.tsx",
      "parent": "/_main"
    },
    "/_main/_contacts/contacts": {
      "filePath": "_main/_contacts/contacts.lazy.tsx",
      "parent": "/_main"
    },
    "/_main/_dispatcher/fill-order": {
      "filePath": "_main/_dispatcher/fill-order.lazy.tsx",
      "parent": "/_main"
    },
    "/_main/_dispatcher/order-status": {
      "filePath": "_main/_dispatcher/order-status.lazy.tsx",
      "parent": "/_main"
    },
    "/_main/_dispatcher/orders": {
      "filePath": "_main/_dispatcher/orders.lazy.tsx",
      "parent": "/_main"
    },
    "/_main/_manager/checkout": {
      "filePath": "_main/_manager/checkout.lazy.tsx",
      "parent": "/_main/_manager"
    },
    "/_main/_manager/orderer": {
      "filePath": "_main/_manager/orderer.lazy.tsx",
      "parent": "/_main/_manager"
    },
    "/_main/_manager/report": {
      "filePath": "_main/_manager/report.lazy.tsx",
      "parent": "/_main/_manager"
    }
  }
}
ROUTE_MANIFEST_END */
